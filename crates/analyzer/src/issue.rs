use std::hash::Hash;

use serde::Deserialize;
use serde::Serialize;
use strum::Display;
use strum::EnumString;

#[derive(Clone, Copy, PartialEq, Eq, Hash, Display, Debug, PartialOrd, Ord, Serialize, Deserialize, EnumString)]
#[strum(serialize_all = "kebab-case")]
pub(crate) enum TypingIssueKind {
    InvalidAssignment,
    AssignmentToThis,
    AssignmentToConstant,
    AbstractInstantiation,
    ExtendFinalClass,
    CloneInsideLoop,
    DuplicateEnumValue,
    DuplicateArrayKey,
    EmptyBlock,
    FalsableReturnStatement,
    ImpossibleArrayAccess,
    ImmutablePropertyWrite,
    ImpossibleArrayAssignment,
    MixedAssignment,
    ImpossibleAssignment,
    ImpossibleKeyCheck,
    ImpossibleNonnullEntryCheck,
    ImpossibleNullTypeComparison,
    ImpossibleCondition,
    ImpossibleTypeComparison,
    IncompatibleTypeParameters,
    InternalError,
    InvalidDocblock,
    InvalidArgument,
    InvalidArrayElementKey,
    InvalidArrayElement,
    MismatchedArrayIndex,
    InvalidArrayIndex,
    InvalidArrayAccess,
    InvalidContainsCheck,
    InvalidMethodAccess,
    InvalidPropertyAssignmentValue,
    InvalidContinue,
    InvalidBreak,
    InvalidReturnStatement,
    InvalidReturnType,
    InvalidReturnValue,
    InvalidTypeCast,
    InvalidGlobal,
    InvalidThrow,
    InvalidUnset,
    InvalidCallable,
    InvalidNamedArgument,
    LessSpecificArgument,
    LessSpecificNestedAnyArgumentType,
    LessSpecificNestedAnyReturnStatement,
    LessSpecificNestedArgumentType,
    LessSpecificNestedReturnStatement,
    LessSpecificReturnStatement,
    MethodAccessOnNull,
    MixedAnyArgument,
    MixedAnyArrayAccess,
    MixedAnyArrayAssignment,
    MixedAnyArrayIndex,
    MixedAnyAssignment,
    MixedAnyMethodAccess,
    MixedAnyPropertyAssignment,
    MixedAnyPropertyTypeCoercion,
    MixedReturnStatement,
    MixedAnyReturnStatement,
    MixedArgument,
    MixedArrayAccess,
    MixedArrayAssignment,
    MixedArrayIndex,
    MixedMethodAccess,
    PossiblyNullOperand,
    NullOperand,
    PossiblyFalseOperand,
    FalseOperand,
    PossiblyInvalidOperand,
    InvalidOperand,
    MixedOperand,
    ArrayAppendInReadContext,
    MixedPropertyAssignment,
    MixedPropertyTypeCoercion,
    NoValue,
    NonExistentClass,
    NonExistentClassConstant,
    NonExistentClassLike,
    NonExistentConstant,
    NonExistentFile,
    NonExistentFunction,
    NonExistentMethod,
    NonExistentProperty,
    NonExistentType,
    NonNullableReturnType,
    NeverReturn,
    NullArrayIndex,
    NullablePropertyAssignment,
    NullableReturnStatement,
    NullableReturnValue,
    OnlyUsedInTests,
    ParadoxicalCondition,
    PossibleMethodAccessOnNull,
    PossiblyFalseArgument,
    PossiblyInvalidArgument,
    PossiblyInvalidArrayAccess,
    PossiblyInvalidMethodCall,
    PossiblyNullArrayAccess,
    PossiblyNullArrayIndex,
    PossiblyUndefinedArrayIndex,
    PossiblyUndefinedIntArrayIndex,
    PossiblyUndefinedStringArrayIndex,
    PropertyTypeCoercion,
    RedundantCast,
    RedundantNullCoalesce,
    RedundantElvis,
    ImplicitToStringCast,
    RedundantIssetCheck,
    RedundantKeyCheck,
    RedundantNonnullEntryCheck,
    RedundantNonnullTypeComparison,
    RedundantCondition,
    RedundantTypeComparison,
    RedundantComparison,
    RedundantLogicalOperation,
    ShadowedLoopVar,
    TooFewArguments,
    TooManyArguments,
    UndefinedIntArrayIndex,
    UndefinedStringArrayIndex,
    UndefinedVariable,
    PossiblyUndefinedVariable,
    ReferenceToUndefinedVariable,
    UnevaluatedCode,
    UnusedFunctionCall,
    UnusedMethodCall,
    UnusedStatement,
    UselessControlFlow,
    StaticInMutationFreeContext,
    ConflictingTemplateEqualityBounds,
    IncompatibleTemplateLowerBound,
    DeprecatedFunction,
    DeprecatedMethod,
    DeprecatedClosure,
    ImpureCallInPureContext,
    ExternalImpureCallInExternalPureContext,
    NamedArgumentNotAllowed,
    DuplicateNamedArgument,
    NamedArgumentOverridesPositional,
    NamedArgumentAfterPositional,
    NamedArgumentForVariadicAfterPositional,
    TemplateConstraintViolation,
    ArrayToStringConversion,
    ImplicitResourceToStringCast,
    DuplicateMatchDefaultArm,
    MatchExpressionOnlyDefaultArm,
    EmptyMatchExpression,
    UnknownMatchSubjectType,
    UnknownMatchConditionType,
    UnreachableMatchArmCondition,
    UnreachableMatchArm,
    UnreachableMatchDefaultArm,
    MatchArmAlwaysTrue,
    MatchDefaultArmAlwaysExecuted,
    MatchSubjectTypeIsNever,
    MatchNotExhaustive,
    InvalidClassLikeDefinition,
    InvalidFunctionLikeDefinition,
    NonExistentAttributeClass,
    NonClassUsedAsAttribute,
    ClassNotMarkedAsAttribute,
    AttributeNotRepeatable,
    AbstractClassUsedAsAttribute,
    InvalidAttributeTarget,
    InvalidCatchType,
    DuplicateCaughtType,
    NoValidCatchTypeFound,
    CatchTypeNotThrowable,
    InvalidCatchTypeNotClassOrInterface,
    NonExistentCatchType,
    UnknownIteratorType,
    NullIterator,
    PossiblyNullIterator,
    FalseIterator,
    PossiblyFalseIterator,
    GenericObjectIteration,
    NonIterableObjectIteration,
    EnumIteration,
    InvalidIterator,
    PossiblyInvalidIterator,
    InvalidForeachKey,
    InvalidForeachValue,
    UndefinedVariableInClosureUse,
    DuplicateClosureUseVariable,
    UnsupportedReferenceInClosureUse,
    UnsupportedReferenceOperation,
    UnusedClosureUse,
    InvalidYieldValueType,
    InvalidYieldKeyType,
    UnknownYieldFromIteratorType,
    YieldFromInvalidSendType,
    YieldFromNonIterable,
    YieldFromInvalidValueType,
    YieldFromInvalidKeyType,
    YieldOutsideFunction,
    InvalidGeneratorReturnType,
    HiddenGeneratorReturn,
    ReservedClassName,
    NameAlreadyInUse,
    SelfOutsideClassScope,
    StaticOutsideClassScope,
    ParentOutsideClassScope,
    InvalidParentType,
    InvalidClassStringExpression,
    UnknownType,
    UnknownClassInstantiation,
    InterfaceInstantiation,
    TraitInstantiation,
    EnumInstantiation,
    DeprecatedClass,
    UnsafeInstantiation,
    AmbiguousInstantiationTarget,
    UnknownConstantSelectorType,
    StringConstantSelector,
    InvalidConstantSelector,
    AmbiguousClassLikeConstantAccess,
    InvalidClassConstantOnString,
    UndefinedClassLikeConstant,
    UnknownMemberSelectorType,
    StringMemberSelector,
    InvalidMemberSelector,
    AmbiguousClassLikeStaticMethodCall,
    InvalidStaticMethodCall,
    DeprecatedFeature,
    TypeInspection,
    TypeConfirmation,
    NullPropertyAccess,
    PossiblyNullPropertyAccess,
    MixedAnyPropertyAccess,
    MixedPropertyAccess,
    InvalidPropertyAccess,
    AmbiguousObjectPropertyAccess,
    InvalidStaticPropertyAccess,
    RedundantNullsafeOperator,
    AmbiguousObjectMethodAccess,
    DisallowedInclude,
    InvalidIncludeArgument,
    ImpureInclude,
    IncludeInsteadOfRequire,
    IncludeInsteadOfOnceVariant,
    DocblockTypeMismatch,
    InvalidArrayDestructuring,
    MixedKeyedAndNonKeyedArrayDestructuring,
    MixedKeyedAndSkippedArrayDestructuring,
    InvalidVariadicInDestructuring,
    InvalidStaticMethodAccess,
    PossiblyStaticAccessOnInterface,
    StaticAccessOnInterface,
    UnsupportedFeature,
    ListUsedInReadContext,
    InvalidScopeKeywordContext,
    MixedClone,
    PossiblyInvalidClone,
    InvalidClone,
    InvalidExtend,
    InvalidImplement,
    MissingRequiredInterface,
    MissingTemplateParameter,
    ExcessTemplateParameter,
    InconsistentTemplate,
    InvalidTemplateParameter,
    UnimplementedAbstractMethod,
    OverriddenPropertyAccess,
    IncompatiblePropertyType,
    InvalidPropertyWrite,
    InvalidPropertyRead,
    DeprecatedConstant,
    InvalidEnumCaseValue,
    ConditionIsTooComplex,
    ExpressionIsTooComplex,
    WhereConstraintViolation,
}

impl From<TypingIssueKind> for String {
    fn from(val: TypingIssueKind) -> Self {
        val.to_string()
    }
}
