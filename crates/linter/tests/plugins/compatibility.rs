use mago_linter::plugin::compatibility::rules::php74::arrow_functions_feature::ArrowFunctionsFeatureRule;
use mago_linter::plugin::compatibility::rules::php74::null_coalesce_assignment_feature::NullCoalesceAssignmentFeatureRule;
use mago_linter::plugin::compatibility::rules::php80::named_arguments_feature::NamedArgumentsFeatureRule;
use mago_linter::plugin::compatibility::rules::php80::promoted_properties_feature::PromotedPropertiesFeatureRule;
use mago_linter::plugin::compatibility::rules::php80::union_type_hint_feature::UnionTypeHintFeatureRule;
use mago_linter::plugin::compatibility::rules::php81::closure_creation_feature::ClosureCreationFeatureRule;
use mago_linter::plugin::compatibility::rules::php82::dnf_type_hint_feature::DnfTypeHintFeatureRule;
use mago_linter::plugin::compatibility::rules::php82::trait_constants_feature::TraitConstantsFeatureRule;
use mago_linter::plugin::compatibility::rules::php82::true_type_hint_feature::TrueTypeHintFeatureRule;
use mago_linter::plugin::compatibility::rules::php83::typed_class_constant_feature::TypedClassConstantFeatureRule;
use mago_linter::plugin::compatibility::rules::php84::asymmetric_visibility_feature::AsymmetricVisibilityFeatureRule;
use mago_linter::plugin::compatibility::rules::php84::hooked_property_feature::HookedPropertyFeatureRule;
use mago_linter::plugin::compatibility::rules::php84::new_without_parentheses_feature::NewWithoutParenthesesRule;

use crate::rule_test;

rule_test!(test_arrow_functions_feature, ArrowFunctionsFeatureRule);
rule_test!(test_null_coalesce_assignment_feature, NullCoalesceAssignmentFeatureRule);
rule_test!(test_named_arguments_feature, NamedArgumentsFeatureRule);
rule_test!(test_promoted_properties_feature, PromotedPropertiesFeatureRule);
rule_test!(test_union_type_hint_feature, UnionTypeHintFeatureRule);
rule_test!(test_closure_creation_feature, ClosureCreationFeatureRule);
rule_test!(test_dnf_type_hint_feature, DnfTypeHintFeatureRule);
rule_test!(test_trait_constants_feature, TraitConstantsFeatureRule);
rule_test!(test_true_type_hint_feature, TrueTypeHintFeatureRule);
rule_test!(test_typed_class_constant_feature, TypedClassConstantFeatureRule);
rule_test!(test_asymmetric_visibility_feature, AsymmetricVisibilityFeatureRule);
rule_test!(test_hooked_property_feature, HookedPropertyFeatureRule);
rule_test!(test_new_without_parentheses_feature, NewWithoutParenthesesRule);
